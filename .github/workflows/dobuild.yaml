#######################################################
# This workflow builds the log controller. This
# workflow should only be triggered on a push to
# the develop branch (eg pull request from a feature)
# branch. It performs the following tasks:
#
#    - log the git branch/commit details
#    - install Go v1.15
#    - run go vet/lint
#    - install CodeQL
#    - compile the code
#    - run CodeQL analysis
#    - zip the compiled binary
#    - run any go test cases
#    - upload the zip as a workflow artefact
#
#######################################################

name: Perform build
on: 
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Variables for the build job
    env:
      build-file: 'logger'
      build-dir: '${{ github.workspace }}/bin'
      zip-file: 'logger.zip'
      zip-dir: '${{ github.workspace }}/zip'
    
    # Build steps
    steps:
    - uses: actions/checkout@v2
    
    # Log basic info
    - name: Log git event info
      run: |
        echo Event: ${{ github.event_name }}
        echo Git Ref: ${{ github.ref }}
        echo Git SHA: ${{ github.sha }}
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.0' 
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
      
    # Run vet & lint on the code
    - name: Run vet & lint
      run: |
        go vet .
        golint .
        
    # Setup CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: go

    # Run go build 
    - name: Run build
      run: |
        mkdir -p ${{ env.build-dir }}
        go build -o ${{ env.build-dir }}/${{ env.build-file }}
        ls -al ${{ env.build-dir }}
        
    # Run CodeQL analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

    # Zip build binary
    - name: Zip build
      run: |
        cd ${{ env.build-dir }}
        mkdir -p ${{ env.zip-dir }}
        zip -r ${{ env.zip-dir }}/${{ env.zip-file }} ./*
        ls -al ${{ env.zip-dir }}
      
    # Run any test cases
    - name: Run test cases
      run: go test ./... -v
      
    # Upload artefact
    - name: Upload zip artefact
      uses: actions/upload-artifact@v2
      with:
        name: LogController
        path: ${{ env.zip-dir }}/${{ env.zip-file }}
